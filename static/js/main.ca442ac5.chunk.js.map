{"version":3,"sources":["Item/Item.styles.ts","Item/Item.tsx","CartItem/CartItem.styles.ts","CartItem/CartItem.tsx","Cart/Cart.styles.ts","Cart/Cart.tsx","App.styles.ts","App.tsx","index.tsx"],"names":["Wrapper","styled","div","Item","item","handleAddToCart","src","image","alt","title","description","price","Button","onClick","CartItem","addToCart","removeFromCart","className","amount","toFixed","size","disableElevation","variant","id","aside","Cart","items","cartItems","length","map","reduce","accum","StyledButton","IconButton","getProducts","a","fetch","json","App","useState","cartOpen","setCartOpen","setCartItems","useQuery","data","isLoading","error","console","log","clickedItem","prev","find","LinearProgress","Drawer","anchor","open","onClose","Badge","badgeContent","color","Grid","container","spacing","xs","sm","client","QueryClient","ReactDOM","render","QueryClientProvider","document","getElementById"],"mappings":"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","file":"static/js/main.ca442ac5.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 100%;\n    border: 1px solid lightblue;\n    border-radius: 20px;\n    height: 100%;\n\n    button {\n        border-radius: 0 0 20px 20px;\n    }\n\n    img {\n        max-height: 250px;\n        object-fit: cover;\n        border-radius: 20px 20px 0 0;\n    }\n\n    div {\n        font-family: Arial, Helvetica, sans-serif;\n        padding: 1rem;\n        height: 100%;\n    }\n`;","import Button from '@material-ui/core/Button';\n//types\nimport { CartItemType } from '../App';\n//styles\nimport { Wrapper } from './Item.styles';\n\n\ntype Props = {\n    item : CartItemType;\n    handleAddToCart : (clickedItem: CartItemType) => void;\n}\n\nconst Item: React.FC<Props> = ({ item, handleAddToCart }) => (\n    <Wrapper>\n        <img src={item.image} alt={item.title} />\n        <div>\n            <h3>{item.title}</h3>\n            <p>{item.description}</p>\n            <h3>${item.price}</h3>\n        </div>\n        <Button onClick={() => handleAddToCart(item)}>Add to Cart</Button>\n    </Wrapper>\n)\n\nexport default Item;","import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    font-family: Arial, Helvetica, sans-serif;\n    border-bottom: 1px solid lightblue;\n    padding-buttom: 20px;\n\n    div {\n        flex: 1;\n    }\n\n    .information, .buttons {\n        display: flex;\n        justify-content: space-between;\n    }\n\n    img {\n        max-width: 80px;\n        object-fit: cover;\n        margin-left: 40px;\n    }\n`","import Button from '@material-ui/core/Button';\n\n//types\nimport { CartItemType } from '../App';\n//styles\nimport { Wrapper } from './CartItem.styles';\n\ntype Props = {\n    item: CartItemType\n    addToCart: (clickedItem: CartItemType) => void\n    removeFromCart: (id: number) => void\n}\n\nconst CartItem: React.FC<Props> = ({ item, addToCart, removeFromCart }) => (\n    <Wrapper>\n        <div>\n            <h3>{item.title}</h3>\n            <div className=\"information\">\n                <p>Price: ${item.price}</p>\n                <p>Total: ${(item.amount * item.price).toFixed(2)}</p>\n            </div>\n            <div className=\"buttons\">\n                <Button \n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => removeFromCart(item.id)}\n                >\n                    -\n                </Button>\n                <p>{item.amount}</p>\n                <Button \n                    size=\"small\"\n                    disableElevation\n                    variant=\"contained\"\n                    onClick={() => addToCart(item)}\n                >\n                    +\n                </Button>\n            </div>\n        </div>\n        <img src={item.image} alt={item.title} />\n    </Wrapper>\n)\n\nexport default CartItem ","import styled from 'styled-components';\n\nexport const Wrapper = styled.aside`\n    font-family: Arial, Helvetica, sans-serif;\n    width: 500px;\n    padding: 20px;\n`","import CartItem from '../CartItem/CartItem'\n//styles\nimport { Wrapper } from './Cart.styles'\n//types\nimport { CartItemType } from '../App'\n\ntype Props = {\n    cartItems: CartItemType[];\n    addToCart: (clickedItem: CartItemType) => void; \n    removeFromCart: (id: number) => void;\n}\n\nconst Cart: React.FC<Props> = ({ cartItems, addToCart, removeFromCart}) => {\n    const calculateTotal = (items: CartItemType[]) =>\n        items.reduce((accum: number, item) => accum + item.amount * item.price, 0)\n\n\n    return (\n        <Wrapper>\n            <h2>Your Cart</h2>\n            {cartItems.length === 0 ? <p>Your Cart Is Empty</p> : null}\n            {cartItems.map(item => (\n                <CartItem \n                    key={item.id}\n                    item={item}\n                    addToCart={addToCart}\n                    removeFromCart={removeFromCart}\n                />\n            ))}\n            <h2>Total: ${calculateTotal(cartItems).toFixed(2)}</h2>\n        </Wrapper>\n    )\n}\n\nexport default Cart","import styled from 'styled-components';\nimport IconButton from '@material-ui/core/IconButton';\n\nexport const Wrapper = styled.div`\n    margin: 40px;\n`;\n\nexport const StyledButton = styled(IconButton)`\n    position: fixed;\n    z-index: 100;\n    right: 20px;\n    top: 20px;\n    \n`","import { useState } from 'react';\nimport { useQuery } from 'react-query';\n//Components\nimport Item from './Item/Item';\nimport Cart from './Cart/Cart';\nimport Drawer from '@material-ui/core/Drawer';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Grid from '@material-ui/core/Grid';\nimport AddShoppingCartIcon from '@material-ui/icons/AddShoppingCart';\nimport Badge from '@material-ui/core/Badge';\n//Styles\nimport { Wrapper, StyledButton } from './App.styles';\n\n//Types\nexport type CartItemType = {\n  id: number;\n  category: string;\n  description: string;\n  image: string;\n  price: number;\n  title: string;\n  amount: number;\n}\n\nconst getProducts = async (): Promise<CartItemType[]> =>\n  await (await fetch('https://fakestoreapi.com/products')).json();\n\nconst App = () => {\n\n  const [cartOpen, setCartOpen] = useState(false)\n  const [cartItems, setCartItems] = useState([] as CartItemType[])\n  const { data, isLoading, error } = useQuery<CartItemType[]>('products', getProducts)\n  console.log('data', data);\n  \nconst getTotalItems = (items: CartItemType[]) =>\n  items.reduce((accum: number, item) => accum + item.amount, 0)\n\n\nconst handleAddToCart = (clickedItem: CartItemType) => {\n//item is already in the cart\n  setCartItems(prev => {\n    const isItemInCart = prev.find(item => item.id === clickedItem.id)\n    if(isItemInCart) {\n      return prev.map(item => (\n        item.id === clickedItem.id\n          ? { ...item, amount: item.amount + 1 }\n          : item\n      ))\n    }\n//first time we add an item\n  return [...prev, { ...clickedItem, amount: 1 }]\n  })\n}\n\nconst handleRemoveFromCart = (id: number) => {\n  setCartItems(prev => (\n    prev.reduce((accum, item) => {\n      if(item.id === id) {\n        if(item.amount === 1) return accum\n        return [...accum, {...item, amount: item.amount - 1}]\n      } else {\n        return [...accum, item]\n      }\n    }, [] as CartItemType[])\n  ))\n}\n\nif (isLoading) return <LinearProgress />\n\nif (error) return <div>Oops! Something went wrong</div>\n\n  return (\n    <Wrapper>\n      <Drawer anchor='right' open={cartOpen} onClose={() => setCartOpen(false)}>\n        <Cart \n          cartItems={cartItems}\n          addToCart={handleAddToCart}\n          removeFromCart={handleRemoveFromCart}\n        />\n      </Drawer>\n      <StyledButton onClick={() => setCartOpen(true)}>\n        <Badge badgeContent={getTotalItems(cartItems)} color='error'>\n          <AddShoppingCartIcon />\n        </Badge>\n      </StyledButton>\n      <Grid container spacing={3}>\n        {data?.map(item => (\n          <Grid item key={item.id} xs={12} sm={4} >\n            <Item item={item} handleAddToCart={handleAddToCart} />\n          </Grid>\n        ))}\n      </Grid>\n    </Wrapper>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { QueryClient, QueryClientProvider } from 'react-query';\n\nconst client = new QueryClient()\n\nReactDOM.render(\n  <QueryClientProvider client = {client}>\n    <App />\n  </QueryClientProvider>, \n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}